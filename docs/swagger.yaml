basePath: /api
definitions:
  authsvc.LoginRequest:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  authsvc.RegisterRequest:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  response.ErrorResponse:
    properties:
      err_code:
        type: string
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: starker Go API Template
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: starker Go API Template
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user with email and password, returns a refresh
        token cookie
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authsvc.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
        "400":
          description: Invalid request body, user not found, or invalid password
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User login
      tags:
      - auth
  /auth/oauth/{provider}:
    get:
      description: Redirects user to OAuth provider for authentication
      parameters:
      - description: OAuth provider (e.g., google, github)
        in: path
        name: provider
        required: true
        type: string
      - description: Redirect URL after successful OAuth linking
        in: query
        name: next
        type: string
      responses:
        "307":
          description: Redirect to OAuth provider
          schema:
            type: string
        "400":
          description: Invalid provider or bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Initiate OAuth flow
      tags:
      - oauth
  /auth/oauth/{provider}/callback:
    get:
      consumes:
      - application/json
      description: Handles OAuth provider callback, processes authorization code,
        creates/links user accounts, and issues authentication tokens
      parameters:
      - description: OAuth provider (e.g., google, github)
        in: path
        name: provider
        required: true
        type: string
      - description: Authorization code from OAuth provider
        in: query
        name: code
        required: true
        type: string
      - description: OAuth state parameter for CSRF protection
        in: query
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "307":
          description: Redirect to success URL with authentication cookies set
          schema:
            type: string
        "400":
          description: Invalid provider, oauth state, or verification failed
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error during user creation or token generation
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: OAuth callback handler
      tags:
      - oauth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access token and returns a new refresh token cookie
      produces:
      - application/json
      responses:
        "200":
          description: Access token generated successfully
          schema:
            type: string
        "400":
          description: Invalid request body, refresh token not found, or refresh token
            already used
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Refresh token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account with email and password
      parameters:
      - description: Registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authsvc.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: Invalid request body or email already in use
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
schemes:
- http
- https
swagger: "2.0"
